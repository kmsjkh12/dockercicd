name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Gradle 캐시 복원 (멀티 스테이지 빌드에서는 필요할 수 있음)
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # 애플리케이션 관련 환경변수 설정 (필요시)
      - run: touch .env
      - run: echo "${{ secrets.APPLICATION }}" > .env
      - run: cat .env

      - name: Build with Gradle Wrapper
        run: |
          chmod +x gradlew
          ./gradlew build -x test

      - name: Log in to DockerHub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: image=moby/buildkit:master

      - name: Build and push Docker image with cache
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./.deploy/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_REPO }}
          cache-from: type=registry,ref=${{ secrets.DOCKER_REPO }}:cache
          cache-to: type=registry,ref=${{ secrets.DOCKER_REPO }}:cache,mode=max

      - name: Deploy via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            cd ~/backend/.deploy
            chmod +x deploy.sh
            source deploy.sh
